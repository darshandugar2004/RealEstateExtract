import requests
from bs4 import BeautifulSoup
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from time import sleep

# Constants
FORM_URL = 'https://forms.gle/fncYbV8nFbdCxxg29'  # Google Form link to save scraped data
URL = "https://appbrewery.github.io/Zillow-Clone/"
UNWANTED_CHARACTERS = ['+', '$', '/', 'mo', '1 bd', ' ']

# Step 1: Scraping property data
response = requests.get(URL)
soup = BeautifulSoup(response.text, 'html.parser')

# Extract property details
links = []
prices = []
addresses = []

property_data = soup.find_all(name='div', class_='StyledPropertyCardDataWrapper')

for property in property_data:
    # Extracting property links
    link = property.find(name='a', class_="StyledPropertyCardDataArea-anchor")['href']
    links.append(link)

    # Extracting property addresses
    address = property.find(name='address').text.strip().replace('|', '')
    addresses.append(address)

    # Extracting property prices
    price = property.find(name='span').text
    for char in UNWANTED_CHARACTERS:
        price = price.replace(char, '')
    prices.append(price)

# Step 2: Filling the Google Form using Selenium
chrome_options = webdriver.ChromeOptions()
chrome_options.add_experimental_option('detach', True)
driver = webdriver.Chrome(options=chrome_options)
driver.get(FORM_URL)

for i in range(len(property_data)):
    sleep(2)

    # Filling the address field
    address_input = driver.find_element(
        By.XPATH, 
        '//*[@id="mG61Hd"]/div[2]/div/div[2]/div[1]/div/div/div[2]/div/div[1]/div/div[1]/input'
    )
    address_input.send_keys(addresses[i])

    # Filling the price field
    price_input = driver.find_element(
        By.XPATH, 
        '//*[@id="mG61Hd"]/div[2]/div/div[2]/div[2]/div/div/div[2]/div/div[1]/div/div[1]/input'
    )
    price_input.send_keys(prices[i])

    # Filling the link field
    link_input = driver.find_element(
        By.XPATH, 
        '//*[@id="mG61Hd"]/div[2]/div/div[2]/div[3]/div/div/div[2]/div/div[1]/div/div[1]/input'
    )
    link_input.send_keys(links[i], Keys.TAB, Keys.ENTER)

    sleep(2)

    # Click "Submit another response" to reset the form
    driver.find_element(By.LINK_TEXT, 'Submit another response').click()

driver.quit()
